// On importe les outils Sass et Angular Material, comme tu l'as fait.
@use 'sass:map';
@use '@angular/material' as mat;

// ========================================================================== //
//                            CORE & TYPOGRAPHIE
// ========================================================================== //

// C'est la base, ça initialise les styles de base de Material.
@include mat.core();

// On définit une config de typo par défaut.
$chrome-clone-typography: mat.m2-define-typography-config();

// ========================================================================== //
//                       SOURCE DE VÉRITÉ (LES COULEURS)
// ========================================================================== //

// La couleur primaire de notre projet, le bleu "Google".
$chrome-brand-primary: #1a73e8;

// On crée une palette Material complète à partir de notre couleur.
// C'est ça qui manquait et qui causait l'erreur.
$chrome-primary-map: (
  50: #e8f0fe,
  100: #c9ddfd,
  200: #a7c8fc,
  300: #85b3fb,
  400: #6aa2fa,
  500: $chrome-brand-primary,
  // <-- NOTRE COULEUR PRIMAIRE
  600: #176be5,
  700: #1461e2,
  800: #1157df,
  900: #0b45d9,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
  ),
);

// On dit à Material : "voilà nos palettes de couleurs officielles".
$chrome-clone-primary: mat.m2-define-palette($chrome-primary-map, 500);
$chrome-clone-accent: mat.m2-define-palette(mat.$m2-pink-palette, A200, A100, A400);
$chrome-clone-warn: mat.m2-define-palette(mat.$m2-red-palette);

// ========================================================================== //
//                            DÉFINITION DU THÈME
// ========================================================================== //

// Pour l'instant, on fait un seul thème light, comme dans le projet.
$chrome-clone-light-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $chrome-clone-primary,
      accent: $chrome-clone-accent,
      warn: $chrome-clone-warn,
    ),
    typography: $chrome-clone-typography,
    density: 0,
  )
);

// ========================================================================== //
//                   APPLICATION GLOBALE DU THÈME MATERIAL
// ========================================================================== //

// On applique les couleurs et la typo de notre thème à TOUS les composants Material.
@include mat.all-component-themes($chrome-clone-light-theme);

// ========================================================================== //
//                 NOTRE DESIGN SYSTEM (VARIABLES CSS)
// ========================================================================== //

// C'est la version simplifiée de tes variables --zflex, mais pour notre projet.
:root {
  // --- Couleurs ---
  --primary-color: #{$chrome-brand-primary}; // On utilise la variable Sass ici
  --primary-color-text: #ffffff;
  --text-color-base: #0f1720;
  --text-color-muted: #6b7280;
  --bg-surface: #ffffff;
  --bg-soft-gradient: linear-gradient(180deg, #fff, #fbfdff);

  // --- Layout & Espacements ---
  --container-max-width: 1120px;
  --container-padding: 20px;
  --header-height: 64px;
  --default-gap: 18px;

  // --- Composants (Cards, Buttons) ---
  --card-border-radius: 12px;
  --card-padding: 18px;
  --card-shadow: 0 8px 30px rgba(12, 18, 30, 0.06);
  --button-border-radius: 12px;
}

// ========================================================================== //
//                       STYLES DE BASE & RESETS
// ========================================================================== //

html,
body {
  height: 100%;
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  scroll-behavior: smooth;
  background-color: var(--bg-surface);
  color: var(--text-color-base);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

// *** LA CORRECTION POUR LE SIDENAV ***
// On bloque le scroll quand le sidenav est ouvert, toujours là.
body.sidenav-open {
  overflow: hidden;
}

// ========================================================================== //
//                       CLASSES UTILITAIRES GLOBALES
// ========================================================================== //

.container {
  width: 100%;
  max-width: var(--container-max-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
}
